﻿@using Microsoft.AspNetCore.Localization
@inject VPMSWeb.Interface.IResourcesLocalizer LangResources
@inject IHttpContextAccessor httpContextaccessor

@{
	ViewData["Title"] = "Invoice & Receipt Page";
	ViewBag.SelectedMenu = "invoiceReceiptMenu";

	// var role = httpContextaccessor.HttpContext.Session.GetString("RoleName");
	// var test = role;
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js" integrity="sha512-YcsIPGdhPK4P/uRW6/sruonlYj+Q7UHWeKfTAkBW+g83NKM+jMJFJ4iAPfSnVp7BKD4dKMHmVSvICUbE/V1sSw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<style>
	.table-content {
		text-align: center;
		height: 2vw;
	}

	.table-content-center {
		text-align: center;
	}

	.table-row-content {
		padding: 1vw 0;
	}

	table th:first-child {
		border-radius: 0.2vw 0 0 0.2vw;
	}

	table th:last-child {
		border-radius: 0 0.2vw 0.2vw 0;
	}

	.form-field {
		border-style: solid;
		border-color: black;
		font-size: 1vw;
	}

	.field-container {
		display: flex;
		flex-direction: column;
		margin-bottom: 2vw;
		font-size: 1vw;
	}

	.form-label {
		font-weight: bold;
		margin-bottom: 0.7vw;
	}

	/* circle-icon */
	#container {
		width: 1.6vw;
		height: 1.6vw;
		display: flex;
		background: transparent;
		border-radius: 2vw;
		color: white;
		border: 0.15vw solid;
		font-size: 1.5vw;
		justify-content: center;
		align-items: center;
	}

	#organisation {
		color: dodgerblue !important;
	}

	.hideContainer {
		display: none !important;
	}

	.tabButton{
		background-color: transparent;
		border-style: none;
		--bs-btn-hover-bg: unset;
		border-radius: 0;
		font-size: 1vw;
	}

	.selectedTab{
		border-bottom-style: solid;
		border-bottom-color: blue;
		color: blue;
		border-width: 0.2vw;
	}
</style>

<div style="display: flex; justify-content: space-between;">

	<div style="display: flex; align-items: center; margin-bottom: 3vw;">
		<img id="imgBackArrow" style=" margin-right: 1vw; width: 1.5vw;" /> <span class="textColor" style="font-size: 2vw;">@LangResources["MenuBar_Label_InvoiceReceipts"]</span>
	</div>

</div>

<div style="display: flex;">
	<div>
		<div style="display: flex; justify-content: space-between;">
			<div>
				<button class="btn btn-lg btn-primary textColor tabButton selectedTab" onclick="changeTab(this);">Invoices</button>
				<button class="btn btn-lg btn-primary textColor tabButton" onclick="changeTab(this);">Receipts</button>
			</div>
			<div style="display: flex; margin-bottom: 3vw; height: 3vw;">
				<button class="btn btn-lg btn-primary" style=" display: flex; align-items: center; margin-left: 1vw;" onclick="location.href='@Url.Action("CreateInvoice", "InvoiceReceipt")'">
					<span id="container">+</span>
					<span style="font-size: 1vw; margin-left: 0.5vw;">Quick Invoice</span>
				</button>
			</div>
		</div>
		<div class="tableContainer">
			<table class="textColor" id="invoiceList" style="width: 57vw; margin-bottom: 2vw; font-size: 1vw;">
			</table>

			<div id="paginationInvoice" style="display: flex; justify-content: flex-end;">
				<div>
					<button id="prevButtonInvoice" onclick="prev('invoice');" style="width: 3vw; height: 3vw; margin-right: 2vw; text-align: center; display: flex; align-items: center; justify-content: center; background: transparent; border-style: none; font-weight: bold; color: gray; font-size: 1vw;" hidden>@LangResources["Patient_Button_Previous"]</button>
				</div>
				<div id="paginationNumberingInvoice" style="display: flex; justify-content: flex-end; font-size: 1vw;">
				</div>
				<div>
					<button id="nextButtonInvoice" onclick="next('invoice');" style="width: 3vw; height: 3vw; margin-left: 1vw; text-align: center; display: flex; align-items: center; justify-content: center; background: transparent; border-style: none; font-weight: bold; color: #1e76fb; font-size: 1vw;" hidden>@LangResources["Patient_Button_Next"]</button>
				</div>
			</div>
		</div>
		<div class="tableContainer hideContainer">
			<table class="textColor" id="receiptList" style="width: 57vw; margin-bottom: 2vw; font-size: 1vw;">
			</table>

			<div id="paginationReceipt" style="display: flex; justify-content: flex-end;">
				<div>
					<button id="prevButtonReceipt" onclick="prev('receipt');" style="width: 3vw; height: 3vw; margin-right: 2vw; text-align: center; display: flex; align-items: center; justify-content: center; background: transparent; border-style: none; font-weight: bold; color: gray; font-size: 1vw;" hidden>@LangResources["Patient_Button_Previous"]</button>
				</div>
				<div id="paginationNumberingReceipt" style="display: flex; justify-content: flex-end; font-size: 1vw;">
				</div>
				<div>
					<button id="nextButtonReceipt" onclick="next('receipt');" style="width: 3vw; height: 3vw; margin-left: 1vw; text-align: center; display: flex; align-items: center; justify-content: center; background: transparent; border-style: none; font-weight: bold; color: #1e76fb; font-size: 1vw;" hidden>@LangResources["Patient_Button_Next"]</button>
				</div>
			</div>
		</div>
	</div>
	<div class="containerBackground" style="width: 20vw; border-radius: 0.2vw; margin-left: 1vw; padding: 2vw;">
		<h3 style="text-align: left; margin-bottom: 2vw; font-size: 1.5vw;">Filter</h3>

		<div class="field-container">
			<span class="form-label">Invoice/Receipt No</span>
			<input id="InvoiceReceiptNo" type="text" class="form-control form-field" />
		</div>

		<div class="field-container">
			<span class="form-label">@LangResources["Patient_Label_PetName"]</span>
			<input id="PetName" type="text" class="form-control form-field" />
		</div>

		<div class="field-container">
			<span class="form-label">@LangResources["Patient_Label_OwnerName"]</span>
			<select id="Owner" class="form-control form-field">
				<option value="" selected> -- @LangResources["Appointment_Selection_SelectOwner"] --</option>
			</select>
		</div>

		<div class="field-container">
			<span class="form-label">@LangResources["Appointment_Label_Doctor"]</span>
			<select id="Doctor" class="form-control form-field">
				<option value="" selected> -- @LangResources["Appointment_Selection_SelectDoctor"] -- </option>
			</select>
		</div>

		<button class="w-100 btn btn-lg btn-primary" onclick="filter();" style="font-size: 1vw;">@LangResources["Patient_Button_Search"]</button>
	</div>
</div>

<!-- Modal -->
<div class="modal fade" id="viewModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" style="--bs-modal-width: unset; margin: 2vw auto;">
	
	<style>
		.hideContainer {
			display: none !important;
		}

		@@media print {
			/* All your print styles go here */
			.printFont {
				font-size: 2vw !important;
			}

			.firstColumn {
				width: 29vw !important;
			}

			.secondColumn {
				width: 14vw !important;
			}

			.thirdColumn {
				width: 10vw !important;
			}

			table{
				border-collapse: collapse;
			}

			td.borderBelow {
				border-style: solid;
				border-width: 0;
				border-bottom-width: 0.1vw;
			}

			td.borderUpBottom {
				border-style: solid;
				border-width: 0;
				border-bottom-width: 0.1vw;
				border-top-width: 0.1vw;
			}

			.modalHeader{
				padding: 1vw 1vw !important;
				border-bottom: 1px solid #dee2e6;
				margin-bottom: 1vw;
			}

			.addressContainer{
				width: 19vw !important;
			}
		}

		.modal-content-custom {
			border: 0.1vw solid !important;
			padding: 1vw;
		}

		.firstColumn {
			width: 17vw;
		}

		.secondColumn {
			width: 10vw;
		}

		.thirdColumn {
			width: 6vw;
		}

	</style>

	<div class="modal-dialog" style="margin: 0 auto; width: fit-content;">
		<div class="modal-content">
			<div class="modal-header modalHeader" style="display: flex; justify-content: space-between; align-items: center; padding: 1vw 2vw;">
				<div style="font-weight: bold;" class="printFont invoiceReceiptNo"></div>
				<div class="button" style="display: flex; justify-content: flex-end; --bs-modal-header-border-color: none; padding: 0;">
					<button type="button" style="margin-right: 1vw; display: flex; justify-content: center;  align-items: center; font-size: 1vw; width: 1vw;" onclick="downloadInvoice();" class="btn btn-lg btn-primary" data-bs-dismiss="modal"><i class="fa-solid fa-download"></i></button>
					<button type="button" style="display: flex; justify-content: center;  align-items: center; font-size: 1vw; width: 1vw;" onclick="printInvoice();" class="btn btn-lg btn-primary" data-bs-dismiss="modal"><i class="fa-solid fa-print"></i></button>
				</div>
			</div>

			<input type="text" id="viewType" hidden />
			<input type="text" id="viewNo" hidden />

			<div class="modal-body" style="display: flex;">
				<div style="margin: 0 1vw;">
					<div>
						<span style="font-size: 1vw;" class="printFont ownerName"></span>
					</div>

					<div style="display: flex; flex-direction: column; margin: 1vw 0;">
						<span class="printFont" style="color: darkgray; font-size: 1vw;">@LangResources["Patient_Label_ContactNo"]</span>
						<span class="printFont ownerNo" style="color: black; font-size: 1vw;"></span>
					</div>

					<div class="addressContainer" style="display: flex; flex-direction: column; margin: 1vw 0; width: 15vw;">
						<span class="printFont" style="color: darkgray; font-size: 1vw;">@LangResources["Patient_Label_Address"]</span>
						<span class="printFont ownerAddress" style="color: black; font-size: 1vw;"></span>
					</div>

					<hr style="border: 0.1vw solid black;">

					<div style="display: flex; flex-direction: column; margin: 1vw 0;">
						<span class="printFont" style="color: darkgray; font-size: 1vw;">@LangResources["Patient_Label_PetName"]</span>
						<span class="printFont petName" style="color: black; font-size: 1vw;"></span>
					</div>

					<div style="display: flex; flex-direction: column; margin: 1vw 0;">
						<span class="printFont" style="color: darkgray; font-size: 1vw;">@LangResources["Patient_Label_RegistrationNo"]</span>
						<span class="printFont petRegistrationNo" style="color: black; font-size: 1vw;"></span>
					</div>

					<div style="display: flex; flex-direction: column; margin: 1vw 0;">
						<span class="printFont" style="color: darkgray; font-size: 1vw;">@LangResources["Patient_Label_Species"]</span>
						<span class="printFont petSpecies" style="color: black; font-size: 1vw;"></span>
					</div>

				</div>
				

				<div>
					<div>
						<span style="font-size: 1vw; font-weight: bold;" class="printFont">Service Name : </span><span class="printFont serviceName" style="font-size: 1vw;"></span>
					</div>
					<div style="margin-bottom: 1vw;">
						<span style="font-size: 1vw; font-weight: bold;" class="printFont">Date : </span><span class="printFont serviceDate" style="font-size: 1vw;"></span>
					</div>

					<div style="margin-bottom: 1vw; padding: 1vw; background-color: whitesmoke;">
						<table class="printFont" id="serviceList" style="font-size: 1vw;">
						</table>
					</div>

					<div style="padding: 1vw; background-color: whitesmoke;">
						<table class="printFont" id="productList" style="font-size: 1vw;">
						</table>
					</div>

					<div style="padding: 1vw;">
						<table class="printFont" style="font-size: 1vw;">
							<tr>
								<td style="padding: 0 1vw;" class="firstColumn">Total</td>
								<td style="padding: 0 1vw;" class="secondColumn"></td>
								<td style="padding: 0 1vw;" class="thirdColumn total"></td>
							</tr>
							<tr>
								<td style="padding: 0 1vw;" class="firstColumn">Tax (6%)</td>
								<td style="padding: 0 1vw;" class="secondColumn"></td>
								<td style="padding: 0 1vw;" class="thirdColumn tax"></td>
							</tr>
							<tr style="border-top-width: 0.2vw; border-bottom-width: 0.2vw; border-color: black;">
								<td style="padding: 0 1vw; font-weight: bold;" class="firstColumn borderUpBottom">Grand Total</td>
								<td style="padding: 0 1vw;" class="secondColumn borderUpBottom"></td>
								<td style="padding: 0 1vw; font-weight: bold;" class="thirdColumn grandTotal borderUpBottom"></td>
							</tr>
						</table>
					</div>

					<div>
						<span style="font-size: 1vw;" class="printFont">Next Appointment : </span><span class="printFont nextAppointment" style="font-size: 1vw; font-weight: bold;">10/10/2024 10:10</span>
					</div>
					<div>
						<span style="font-size: 1vw;" class="printFont">Surgery/Vaccination/Consultation Name : </span><span class="printFont nextServiceName" style="font-size: 1vw; font-weight: bold;">Endoscopy Follow Up</span>
					</div>

				</div>
			</div>
		</div>
	</div>

</div>

<!-- Modal Mark as paid -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-hidden="true" style="--bs-modal-width: unset; margin: 16vw auto;">

	<div class="modal-dialog" style="margin: 0 auto; width: fit-content;">
		<div class="modal-content">
			<div class="modal-body" style="width: 29vw; padding: 3vw 3vw; font-size: 1vw;">
				<div style="margin-bottom: 2vw; text-align: center;">
					<span class="formlabel" style="font-weight: bold;">Are you sure you want to mark as paid and move to receipt?</span>
				</div>

				<div style="text-align: center; margin-top: 2vw;">
					<button class="btn btn-lg btn-secondary" data-bs-dismiss="modal" style="width: 11vw; font-size: 1vw;"> @LangResources["Patient_Selection_No"] </button>
					<button class="btn btn-lg btn-primary" onclick="MarkAsPaid();" data-bs-dismiss="modal" style="width: 11vw; font-size: 1vw;"> @LangResources["Patient_Selection_Yes"] </button>
				</div>

			</div>
		</div>
	</div>
</div>

<script>
	var paginationLimit = 5;
	var rowLimit = 8;
	var currentInvoiceReceptNo = "", currentPetName = "", currentOwnerName = "", currentDoctor = "";
	var currentInvoiceID = 0;

	var startPaginationInvoice = 1;
	var endPaginationInvoice = 0;
	var totalPaginationInvoice = 0;
	var currentPageInvoice = 1;

	var startPaginationReceipt = 1;
	var endPaginationReceipt = 0;
	var totalPaginationReceipt = 0;
	var currentPageReceipt = 1;

	getInvoiceList(1, true);
	getReceiptList(1, true);

	function changeTab(e){
		var currentTab = document.querySelector(".selectedTab");
		var table = document.querySelectorAll(".tableContainer");

		if (currentTab) {
			currentTab.classList.toggle("selectedTab");
		}

		e.classList.toggle("selectedTab");

		for (let i = 0; i < table.length; i++){
			table[i].classList.toggle("hideContainer");
		}
	}

	function getInvoiceList(page, reset){

		fetch('/InvoiceReceipt/GetInvoiceList?rowLimit=' + rowLimit + '&page=' + page + '&invoiceNo=' + currentInvoiceReceptNo + '&petName=' + currentPetName + '&ownerName=' + currentOwnerName + '&doctor=' + currentDoctor)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {

				let total = data.TotalInvoiceReceipt;

				if (reset) {
					if (total == 0) { document.getElementById("paginationInvoice").hidden = true; }
					else {
						document.getElementById("paginationInvoice").hidden = false;

						var totalPage = parseInt(total / rowLimit);

						if (totalPage == 0) { totalPage = totalPage + 1; }

						if ((total > rowLimit) && (total % rowLimit) != 0) { totalPage = totalPage + 1; }

						totalPaginationInvoice = totalPage;

						if (totalPage > paginationLimit) { endPaginationInvoice = paginationLimit }
						else { endPaginationInvoice = totalPage; }

						pagination(startPaginationInvoice, endPaginationInvoice, "paginationNumberingInvoice");
					}
				}


				if (currentPageInvoice == totalPaginationInvoice) { document.getElementById("nextButtonInvoice").hidden = true; }
				else { document.getElementById("nextButtonInvoice").hidden = false; }
				if (currentPageInvoice == 1) { document.getElementById("prevButtonInvoice").hidden = true; }
				else { document.getElementById("prevButtonInvoice").hidden = false; }

				var content = document.getElementById("invoiceList");

				content.innerHTML =
					'<tr class="containerBackground">' +
					'<th class="table-content" > @LangResources["Patient_Label_Number"] </th>' +
					'<th class="table-content" > Invoice No </th>' +
					'<th class="table-content" > Date </th>' +
					'<th class="table-content" > @LangResources["Patient_Label_PetName"] </th>' +
					'<th class="table-content" > @LangResources["Appointment_Label_Doctor"] </th>' +
					'<th class="table-content" > @LangResources["Patient_Label_OwnerName"] </th>' +
					'<th class="table-content" > Fee ($) </th>' +
					'<th class="table-content" > </th>' +
					'</tr>';

				if (data.TotalInvoiceReceipt == 0) { content.innerHTML = content.innerHTML + ' <tr style="border-bottom-width: 0.1vw; height: 3.3vw;"> <td colspan="8" class="table-content"> @LangResources["Patient_Message_NoRecord"] <td> </tr>' }
				else {
					for (let i = 0; i < data.invoiceReceiptList.length; i++) {

						var date = new Date(data.invoiceReceiptList[i].Date);
						var dateString = [
							('0' + date.getDate()).slice(-2),
							('0' + (date.getMonth() + 1)).slice(-2),
							date.getFullYear()
						].join('/');

						content.innerHTML = content.innerHTML +
							'<tr style="border-bottom-width: 0.1vw; height: 3.3vw;">' +
							'<td class="table-content" >' + data.invoiceReceiptList[i].No + '</td>' +
							'<td class="table-content" >' + data.invoiceReceiptList[i].InvoiceNo + '</td>' +
							'<td class="table-content" >' + dateString + '</td>' +
							'<td class="table-content" >' + data.invoiceReceiptList[i].PetName + '</td>' +
							'<td class="table-content" >' + data.invoiceReceiptList[i].Doctor + '</td>' +
							'<td class="table-content" > ' + data.invoiceReceiptList[i].OwnerName + '</td>' +
							'<td class="table-content" > ' + data.invoiceReceiptList[i].Fee + '</td>' +
							'<td class="table-content" style = "width: 0;" > ' +
							'<div class="dropleft" > ' +
							'<button class="btn" type="button" data-toggle="dropdown" aria-expanded="false"> ' +
							'<img class="moreIcon" /> ' +
							'</button>' +
							'<div class="dropdown-menu" style = "min-width: fit-content; font-size: 1vw;" > ' +
							'<a class="dropdown-item" href = "#" onclick="viewInvoiceReceipt(\'Invoice\', ' + data.invoiceReceiptList[i].ID + ');" data-bs-toggle="modal" data-bs-target="#viewModal" > @LangResources["Patient_Button_View"] </a>' +
							'<a class="dropdown-item" href="#" onclick="viewInvoiceReceipt(\'Invoice\', ' + data.invoiceReceiptList[i].ID + '); downloadInvoice();"> Download </a>' +
							'<a class="dropdown-item" href="#" onclick="viewInvoiceReceipt(\'Invoice\', ' + data.invoiceReceiptList[i].ID + '); printInvoice();" > Print </a>' +
							// '<a class="dropdown-item" href="#" onclick="MarkAsPaid(' + data.invoiceReceiptList[i].ID + ');" > Mark as paid </a>' +
							'<a class="dropdown-item" href="#" onclick="currentInvoiceID = ' + data.invoiceReceiptList[i].ID + ';" data-bs-toggle="modal" data-bs-target="#confirmationModal" > Mark as paid </a>' +
							'</div>' +
							'</div>' +
							'</td>' +
							'</tr>';
					}
				}


			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});
	}

	function getReceiptList(page, reset) {

		fetch('/InvoiceReceipt/GetInvoiceReceiptList?rowLimit=' + rowLimit + '&page=' + page + '&status=3&receiptNo=' + currentInvoiceReceptNo + '&petName=' + currentPetName + '&ownerName=' + currentOwnerName + '&doctor=' + currentDoctor)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {

				let total = data.TotalInvoiceReceipt;

				if (reset) {
					if (total == 0) { document.getElementById("paginationReceipt").hidden = true; }
					else {
						document.getElementById("paginationReceipt").hidden = false;

						var totalPage = parseInt(total / rowLimit);

						if (totalPage == 0) { totalPage = totalPage + 1; }

						if ((total > rowLimit) && (total % rowLimit) != 0) { totalPage = totalPage + 1; }

						totalPaginationReceipt = totalPage;

						if (totalPage > paginationLimit) { endPaginationReceipt = paginationLimit }
						else { endPaginationReceipt = totalPage; }

						pagination(startPaginationReceipt, endPaginationReceipt, "paginationNumberingReceipt");
					}
				}


				if (currentPageReceipt == totalPaginationReceipt) { document.getElementById("nextButtonReceipt").hidden = true; }
				else { document.getElementById("nextButtonReceipt").hidden = false; }
				if (currentPageReceipt == 1) { document.getElementById("prevButtonReceipt").hidden = true; }
				else { document.getElementById("prevButtonReceipt").hidden = false; }

				var content = document.getElementById("receiptList");

				content.innerHTML =
					'<tr class="containerBackground">' +
					'<th class="table-content" > @LangResources["Patient_Label_Number"] </th>' +
					'<th class="table-content" > Receipt No </th>' +
					'<th class="table-content" > Date </th>' +
					'<th class="table-content" > @LangResources["Patient_Label_PetName"] </th>' +
					'<th class="table-content" > @LangResources["Appointment_Label_Doctor"] </th>' +
					'<th class="table-content" > @LangResources["Patient_Label_OwnerName"] </th>' +
					'<th class="table-content" > Fee ($) </th>' +
					'<th class="table-content" > </th>' +
					'</tr>';

				if (data.TotalInvoiceReceipt == 0) { content.innerHTML = content.innerHTML + ' <tr style="border-bottom-width: 0.1vw; height: 3.3vw;"> <td colspan="8" class="table-content"> @LangResources["Patient_Message_NoRecord"] <td> </tr>' }
				else {
					for (let i = 0; i < data.invoiceReceiptList.length; i++) {

						var date = new Date(data.invoiceReceiptList[i].Date);
						var dateString = [
							('0' + date.getDate()).slice(-2),
							('0' + (date.getMonth() + 1)).slice(-2),
							date.getFullYear()
						].join('/');

						content.innerHTML = content.innerHTML +
							'<tr style="border-bottom-width: 0.1vw; height: 3.3vw;">' +
							'<td class="table-content" >' + data.invoiceReceiptList[i].No + '</td>' +
							'<td class="table-content" >' + data.invoiceReceiptList[i].ReceiptNo + '</td>' +
							'<td class="table-content" >' + dateString + '</td>' +
							'<td class="table-content" >' + data.invoiceReceiptList[i].PetName + '</td>' +
							'<td class="table-content" >' + data.invoiceReceiptList[i].Doctor + '</td>' +
							'<td class="table-content" > ' + data.invoiceReceiptList[i].OwnerName + '</td>' +
							'<td class="table-content" > ' + data.invoiceReceiptList[i].Fee + '</td>' +
							'<td class="table-content" style = "width: 0;" > ' +
							'<div class="dropleft" > ' +
							'<button class="btn" type="button" data-toggle="dropdown" aria-expanded="false"> ' +
							'<img class="moreIcon" /> ' +
							'</button>' +
							'<div class="dropdown-menu" style = "min-width: fit-content; font-size: 1vw;" > ' +
							'<a class="dropdown-item" href = "#" onclick="viewInvoiceReceipt(\'Receipt\', ' + data.invoiceReceiptList[i].ID + ');"  data-bs-toggle="modal" data-bs-target="#viewModal"> @LangResources["Patient_Button_View"] </a>' +
							'<a class="dropdown-item" href="#" onclick="viewInvoiceReceipt(\'Receipt\', ' + data.invoiceReceiptList[i].ID + '); downloadInvoice();" > Download </a>' +
							'<a class="dropdown-item" href="#" onclick="viewInvoiceReceipt(\'Receipt\', ' + data.invoiceReceiptList[i].ID + '); printInvoice();" > Print </a>' +
							'</div>' +
							'</div>' +
							'</td>' +
							'</tr>';
					}
				}


			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});
	}

	function pagination(start, end, elementID) {

		var element = document.getElementById(elementID);

		if (elementID == "paginationNumberingInvoice") {
			element.innerHTML = "";

			for (let i = start; i < end + 1; i++) {
				var color = "";
				if (currentPageInvoice == i) { background = "#1e76fb"; color = "white" }
				else { background = "transparent"; color = "#1e76fb"; }

				element.innerHTML = element.innerHTML +
					'<div>' +
					'<button onclick="changePage(this, \'invoice\');" data-page="' + i + '" style="width: 3vw; height: 3vw; background-color: ' + background + '; color: ' + color + '; margin-right: 1vw; text-align: center; border-radius: 3vw; display: flex; align-items: center; justify-content: center; border: 0.1vw solid; border-color: #1e76fb; font-weight: bold;"> ' + ('0' + i).slice(-2) + ' </button>' +
					'</div>';
			}
		}
		else { 
			element.innerHTML = "";

			for (let i = start; i < end + 1; i++) {
				var color = "";
				if (currentPageReceipt == i) { background = "#1e76fb"; color = "white" }
				else { background = "transparent"; color = "#1e76fb"; }

				element.innerHTML = element.innerHTML +
					'<div>' +
					'<button onclick="changePage(this, \'receipt\');" data-page="' + i + '" style="width: 3vw; height: 3vw; background-color: ' + background + '; color: ' + color + '; margin-right: 1vw; text-align: center; border-radius: 3vw; display: flex; align-items: center; justify-content: center; border: 0.1vw solid; border-color: #1e76fb; font-weight: bold;"> ' + ('0' + i).slice(-2) + ' </button>' +
					'</div>';
			}
		}
	}

	function prev(table) {
		if (table == "invoice") {
			currentPageInvoice = currentPageInvoice - 1;

			getInvoiceList(currentPageInvoice, false);

			if ((currentPageInvoice != 1) && (currentPageInvoice == startPaginationInvoice)) { startPaginationInvoice--; endPaginationInvoice--; }
			pagination(startPaginationInvoice, endPaginationInvoice, "paginationNumberingInvoice");
		}
		else{
			currentPageReceipt = currentPageReceipt - 1;

			getReceiptList(currentPageReceipt, false);

			if ((currentPageReceipt != 1) && (currentPageReceipt == startPaginationReceipt)) { startPaginationReceipt--; endPaginationReceipt--; }
			pagination(startPaginationReceipt, endPaginationReceipt, "paginationNumberingReceipt");
		}
		
	}

	function next(table) {
		if (table == "invoice") {
			currentPageInvoice = currentPageInvoice + 1;

			getInvoiceList(currentPageInvoice, false);

			if ((currentPageInvoice == endPaginationInvoice) && (endPaginationInvoice != totalPaginationInvoice)) { startPaginationInvoice++; endPaginationInvoice++; }
			pagination(startPaginationInvoice, endPaginationInvoice, "paginationNumberingInvoice");
		}
		else {
			currentPageReceipt = currentPageReceipt + 1;

			getReceiptList(currentPageReceipt, false);

			if ((currentPageReceipt == endPaginationReceipt) && (endPaginationReceipt != totalPaginationReceipt)) { startPaginationReceipt++; endPaginationReceipt++; }
			pagination(startPaginationReceipt, endPaginationReceipt, "paginationNumberingReceipt");
		}
	}

	function changePage(page, targetTable) {
		let pageNum = page.getAttribute("data-page");

		if (targetTable == "invoice") {
			currentPageInvoice = Number(pageNum);

			getInvoiceList(currentPageInvoice, false);

			if ((currentPageInvoice == endPaginationInvoice) && (endPaginationInvoice != totalPaginationInvoice)) { startPaginationInvoice++; endPaginationInvoice++; }
			else if ((currentPageInvoice != 1) && (currentPageInvoice == startPaginationInvoice)) { startPaginationInvoice--; endPaginationInvoice--; }
			pagination(startPaginationInvoice, endPaginationInvoice, "paginationNumberingInvoice");
		}
		else {
			currentPageReceipt = Number(pageNum);

			getReceiptList(currentPageReceipt, false);

			if ((currentPageReceipt == endPaginationReceipt) && (endPaginationReceipt != totalPaginationReceipt)) { startPaginationReceipt++; endPaginationReceipt++; }
			else if ((currentPageReceipt != 1) && (currentPageReceipt == startPaginationReceipt)) { startPaginationReceipt--; endPaginationReceipt--; }
			pagination(startPaginationReceipt, endPaginationReceipt, "paginationNumberingReceipt");
		}
	}

	function filter() {
		currentInvoiceReceptNo = document.getElementById("InvoiceReceiptNo").value;
		currentPetName = document.getElementById("PetName").value;
		currentOwnerName = document.getElementById("Owner").value;
		currentDoctor = document.getElementById("Doctor").value;

		currentPageInvoice = 1;
		currentPageReceipt = 1;

		getInvoiceList(currentPageInvoice, true);
		getReceiptList(currentPageReceipt, true);
	}

	function MarkAsPaid(){
		fetch('/InvoiceReceipt/MarkAsPaid?id=' + currentInvoiceID)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				
				return response.json();
			})
			.then(data => {
				let a = data;

				getInvoiceList(1, true);
				getReceiptList(1, true);
			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});
	}

	function downloadInvoice() {
		setTimeout(function () {
			var clone = document.getElementById("viewModal").cloneNode(true);
			clone.querySelector(".button").classList.toggle("hideContainer");
			clone.querySelector(".modal-content").classList.toggle("modal-content-custom");
			var element = clone.querySelector(".modal-dialog");
			var type = clone.querySelector("#viewType").value;
			var invoiceReceiptNo = clone.querySelector("#viewNo").value;

			var opt = {
				margin: [1, 0],
				filename: type + ' - ' + invoiceReceiptNo + '.pdf',
				image: { type: 'jpeg', quality: 0.98 },
				html2canvas: { scale: 2 },
				jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
			};

			html2pdf().set(opt).from(element).save();
		}, 1000);
	}

	function printInvoice() {
		setTimeout(function () {
			var clone = document.getElementById("viewModal").cloneNode(true);
			clone.querySelector(".button").classList.toggle("hideContainer");
			clone.querySelector(".modal-content").classList.toggle("modal-content-custom");

			var iframe = document.createElement("iframe"); // create the element
			document.body.appendChild(iframe);  // insert the element to the DOM

			var input = clone.innerHTML;

			iframe.contentWindow.document.write(input); // write the HTML to be printed
			iframe.contentWindow.print();  // print it
			document.body.removeChild(iframe); // remove the iframe from the DOM
		}, 1000);
	}

	function viewInvoiceReceipt(type, id){
		fetch('/InvoiceReceipt/ViewInvoiceReceipt?id=' + id)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}

				return response.json();
			})
			.then(data => {
				var invoiceReceiptNo = "";
				if (type == "Invoice") {
					document.querySelector(".invoiceReceiptNo").innerHTML = "Invoice No: " + data.InvoiceReceipt.InvoiceNo;
					invoiceReceiptNo = data.InvoiceReceipt.InvoiceNo;
				}
				else {
					document.querySelector(".invoiceReceiptNo").innerHTML = "Receipt No: " + data.InvoiceReceipt.ReceiptNo;
					invoiceReceiptNo = data.InvoiceReceipt.ReceiptNo;
				}

				var date = new Date(data.TreatmentPlan.TreatmentStart);
				var createdDate = new Date(data.TreatmentPlan.CreatedDate);
				var dateString = [
					('0' + date.getDate()).slice(-2),
					('0' + (date.getMonth() + 1)).slice(-2),
					date.getFullYear()
				].join('/');

				if (dateString == "01/01/1") {
					dateString = [
						('0' + createdDate.getDate()).slice(-2),
						('0' + (createdDate.getMonth() + 1)).slice(-2),
						createdDate.getFullYear()
					].join('/');
				}

				document.querySelector("#viewType").value = type;
				document.querySelector("#viewNo").value = invoiceReceiptNo;

				document.querySelector(".serviceName").innerHTML = data.TreatmentPlan.PlanName;
				document.querySelector(".serviceDate").innerHTML = dateString;

				document.querySelector(".ownerName").innerHTML = data.Owner.Name;
				document.querySelector(".ownerNo").innerHTML = data.Owner.ContactNo;
				document.querySelector(".ownerAddress").innerHTML = data.Owner.Address;

				document.querySelector(".petName").innerHTML = data.Pet.Name;
				document.querySelector(".petRegistrationNo").innerHTML = data.Pet.RegistrationNo;
				document.querySelector(".petSpecies").innerHTML = data.Pet.Species;

				serviceList(data.Services);
				productList(data.Products);


			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});
	}

	function serviceList(data) {
		var serviceTable = document.getElementById("serviceList");
		var serviceTotal = 0;
		serviceTable.innerHTML = 
			'<tr style="border-bottom-width: 0.1vw;">' +
				'<td class="borderBelow" style="font-weight: bold; padding: 0 1vw;" class="firstColumn"> Service</td>' +
				'<td class="borderBelow" style="font-weight: bold; padding: 0 1vw;" class="secondColumn">Discount (%)</td>' +
				'<td class="borderBelow" style="font-weight: bold; padding: 0 1vw;" class="thirdColumn">Price ($)</td>' +
			'</tr> ';

		if(data.length == 0) {
			serviceTable.innerHTML += '<tr> <td colspan="3" style="text-align: center;"> @LangResources["Patient_Message_NoRecord"] <td> </tr>';
		}
		else {
			for (let i = 0; i < data.length; i++) {
				serviceTable.innerHTML +=
					'<tr>' +
						'<td style="padding: 0 1vw;" class="firstColumn"> ' + data[i].ServiceName + '</td>' +
						'<td style="padding: 0 1vw;" class="secondColumn"> ' + data[i].Discount + '</td>' +
						'<td style="padding: 0 1vw;" class="thirdColumn totalServices"> ' + data[i].TotalPrice + '</td>' +
					'</tr>';
			}
		}

		var serviceTotalElement = serviceTable.querySelectorAll(".totalServices");
		for (let j = 0; j < serviceTotalElement.length; j++) {
			serviceTotal += Number(serviceTotalElement[j].innerHTML);
		}

		serviceTable.innerHTML +=
			'<tr>' +
				'<td style="padding: 1vw; padding-bottom: 0; font-weight: bold;" class="firstColumn">Total Cost</td>' +
				'<td style="padding: 1vw; padding-bottom: 0;" class="secondColumn"></td>' +
				'<td style="padding: 1vw; padding-bottom: 0; font-weight: bold;" class="thirdColumn totalAll">' + (serviceTotal).toFixed(2).replace(/[.,]00$/, "") + '</td>' +
			'</tr>';

		calculateGrandTotal();
	}

	function productList(data) {
		var productTable = document.getElementById("productList");
		var productTotal = 0;
		productTable.innerHTML =
			'<tr style="border-bottom-width: 0.1vw;">' +
				'<td class="borderBelow" style="font-weight: bold; padding: 0 1vw;" class="firstColumn"> Product</td>' +
				'<td class="borderBelow" style="font-weight: bold; padding: 0 1vw;" class="secondColumn">Discount (%)</td>' +
				'<td class="borderBelow" style="font-weight: bold; padding: 0 1vw;" class="thirdColumn">Price ($)</td>' +
			'</tr> ';

		if (data.length == 0) {
			productTable.innerHTML += '<tr> <td colspan="3" style="text-align: center;"> @LangResources["Patient_Message_NoRecord"] <td> </tr>';
		}
		else{
			for (let i = 0; i < data.length; i++) {
				var date = new Date(data[i].ExpiryDate);
				var dateString = [
					('0' + date.getDate()).slice(-2),
					('0' + (date.getMonth() + 1)).slice(-2),
					date.getFullYear()
				].join('/');

				productTable.innerHTML +=
					'<tr>' +
						'<td style="padding: 0 1vw;" class="firstColumn">' + data[i].ProductName + ' <br /> <span style="color: red;">Product Expiry : ' + dateString + '</span></td>' +
						'<td style="padding: 0 1vw;" class="secondColumn"> ' + (data[i].Discount).toFixed(2).replace(/[.,]00$/, "") + '</td>' +
						'<td style="padding: 0 1vw;" class="thirdColumn totalProducts"> ' + data[i].TotalPrice + '</td>' +
					'</tr>';
			}
		}

		var productTotalElement = productTable.querySelectorAll(".totalProducts");
		for (let j = 0; j < productTotalElement.length; j++) {
			productTotal += Number(productTotalElement[j].innerHTML);
		}

		productTable.innerHTML +=
			'<tr>' +
				'<td style="padding: 1vw; padding-bottom: 0; font-weight: bold;" class="firstColumn">Total Cost</td>' +
				'<td style="padding: 1vw; padding-bottom: 0;" class="secondColumn"></td>' +
				'<td style="padding: 1vw; padding-bottom: 0; font-weight: bold;" class="thirdColumn totalAll">' + (productTotal).toFixed(2).replace(/[.,]00$/, "") + '</td>' +
			'</tr>';

		calculateGrandTotal();
	}

	function calculateGrandTotal() {
		var totalAllElement = document.querySelectorAll(".totalAll");
		var totalAll = 0;

		for (let i = 0; i < totalAllElement.length; i++) {
			totalAll += Number(totalAllElement[i].innerHTML);
		}

		document.querySelector(".total").innerHTML = (totalAll).toFixed(2).replace(/[.,]00$/, "");
		var tax = (totalAll * (6 / 100)).toFixed(2).replace(/[.,]00$/, "");

		document.querySelector(".tax").innerHTML = tax;
		document.querySelector(".grandTotal").innerHTML = (Number(totalAll) + Number(tax)).toFixed(2).replace(/[.,]00$/, "");
	}
</script>