﻿@using Microsoft.AspNetCore.Localization
@inject VPMSWeb.Interface.IResourcesLocalizer LangResources
@inject IHttpContextAccessor httpContextaccessor

@{
	ViewData["Title"] = "Create New Treatment Plan Page";
	ViewBag.SelectedMenu = "patientServicesMenu";

	var sessionLevel = httpContextaccessor.HttpContext.Session.GetString("Level");
	var sessionIsAdmin = httpContextaccessor.HttpContext.Session.GetString("IsAdmin");
	var sessionOrganizationID = httpContextaccessor.HttpContext.Session.GetString("OrganisationID");
	var sessionCurrencyCode = httpContextaccessor.HttpContext.Session.GetString("CurrencyCode");
}

<style>
	.field-container {
		display: flex;
		flex-direction: column;
		margin-bottom: 1.5vw;
		margin-left: 1.5vw;
		margin-right: 1.5vw;
	}

	.formlabel {
		font-weight: bold;
		margin-bottom: 0.3vw;
		font-size: 1vw;
	}

	.inputField {
		border: 0.1vw solid;
		font-size: 1vw;
	}

	.halfSize {
		width: 36vw;
	}

	.quaterSize {
		width: 16.5vw;
	}

	/* circle-icon */
	#container {
		width: 1.6vw;
		height: 1.6vw;
		display: flex;
		background: transparent;
		border-radius: 2vw;
		color: blue;
		border: 0.15vw solid;
		font-size: 1.5vw;
		justify-content: center;
		align-items: center;
	}

	.hideContainer {
		display: none !important;
	}

	.currentPage {
		background-color: blue !important;
		color: white !important;
		border: none;
		border-style: none !important;
	}

	.currentPageText {
		color: black !important;
	}

	.medicalRecordPartition {
		width: 26vw;
		/* height: 31vw;
			overflow: auto; */
	}

	.medicalRecordPartitionTitle {
		margin-left: 1.5vw;
		margin-right: 1.5vw;
		margin-bottom: 1.5vw;
	}

	#service {
		color: dodgerblue !important;
	}
</style>

<div style="display: flex;">
	<div style="display: flex; align-items: center; margin-bottom: 1.5vw;">
		<img id="imgBackArrow" style=" margin-right: 1vw; width: 1.5vw;" onclick="location.href='@Url.Action("ServiceList", "PatientServices")'" />
		<span class="textColor" style="font-size: 2vw;">@LangResources["MenuBar_Label_Service"]</span>
		<span class="textColor" style="font-size: 2vw; margin-left:1vw; margin-right:1vw; font-weight: bold;"> &#62; </span>
		<span style="font-size: 2vw; color: dodgerblue;">@LangResources["Inventory_Label_Create"] @LangResources["MenuBar_Label_Service"]</span>
	</div>
</div>

<div id="ownerInfoContainer">
	<div>
		<div class="containerBackground2" style="width: 77vw; padding: 0.7vw; padding-left: 1.5vw; border-top-left-radius: 0.5vw; border-top-right-radius: 0.5vw;">
			<span class="formlabel" style="margin-bottom: 0 !important;">@LangResources["Service_Label_ServiceDetails"]</span>
		</div>
		<div class="containerBorder textColor" style="width: 77vw; border-style: solid; border-bottom-left-radius: 0.5vw; border-bottom-right-radius: 0.5vw; padding: 1.5vw; padding-left: 0.5vw; padding-right: 0.5vw; padding-bottom: 0.5vw; margin-bottom: 2vw;">

			<div style="display: flex; margin-bottom: 1.5vw;">
				<div class="field-container quaterSize">
					<span class="formlabel">@LangResources["Service_Label_ServiceName"]</span>
					<input id="ServiceName" type="text" class="form-control form-field inputField" />
				</div>

				<div class="field-container quaterSize">
					<span class="formlabel">@LangResources["Inventory_Label_Category"]</span>
					<select id="Category" class="form-select form-field inputField">
						<option value="" selected> -- @LangResources["Service_Label_SelectCategory"] --</option>
						@foreach (var category in ViewData["Category"] as IEnumerable<VPMS.Lib.Data.Models.ServiceCategory>)
						{
							<option value="@category.ID"> @category.Name - @category.SubCategoryName</option>
						}						
					</select>
				</div>

				<div class="field-container quaterSize">
					<span class="formlabel">@LangResources["Patient_Label_Price"] (@sessionCurrencyCode)</span>
					<input id="Price" type="number" min="0" onchange="parseFloat(parseFloat(this.value).toFixed(2));" class="form-control form-field inputField" />
				</div>

				<div class="field-container quaterSize">
					<span class="formlabel">@LangResources["Service_Label_TimeOfServiceHr"]</span>
					<input id="TimeOfService" min="0" type="number" onchange="parseFloat(parseFloat(this.value).toFixed(1));" step="0.5" class="form-control form-field inputField" />
				</div>
			</div>

			<div style="display: flex; margin-bottom: 1.5vw;">
				<div class="field-container quaterSize">
					<span class="formlabel">@LangResources["Inventory_Label_Organisation"]</span>
					<select id="Organisation" class="form-select form-field inputField" onchange="getBranch(this.value);">
						<option value="" selected> -- @LangResources["Inventory_Label_SelectOrganisation"] --</option>
						@foreach (var organisation in ViewData["Organisation"] as IEnumerable<VPMS.Lib.Data.Models.OrganisationModel>)
						{
							<option value="@organisation.Id"> @organisation.Name</option>
						}
					</select>
				</div>

				<div class="field-container quaterSize">
					<span class="formlabel">@LangResources["Inventory_Label_Branch"]</span>
					<select id="Branch" class="form-select form-field inputField">
						<option value="" selected> -- @LangResources["Inventory_Label_SelectBranch"] --</option>
					</select>
				</div>

				<div class="field-container quaterSize">
					<span class="formlabel">@LangResources["Patient_Label_Status"]</span>
					<select id="Status" class="form-select form-field inputField">
						<option value="" selected> -- @LangResources["Patient_Selection_SelectStatus"] --</option>
						<option value="1"> @LangResources["Patient_Selection_Active"]</option>
						<option value="2"> @LangResources["Patient_Selection_Inactive"]</option>
					</select>
				</div>

				<div class="field-container quaterSize">
					&nbsp;
				</div>
			</div>

			<div style="margin-bottom: 1.5vw;">
				<div class="field-container">
					<span class="formlabel">@LangResources["Inventory_Label_Description"]</span>
					<textarea id="Description" rows="5" class="form-control form-field inputField" style="width: 100%;"></textarea>
				</div>
			</div>

			<div style="margin-bottom: 1.5vw;">
				<div class="field-container">
					<span class="formlabel">@LangResources["Service_Label_Precaution"]</span>
					<textarea id="Precaution" rows="5" class="form-control form-field inputField" style="width: 100%;"></textarea>
				</div>
			</div>

		</div>
	</div>

	<div style="text-align: end; margin-right: 1.6vw;">
		<button class="btn btn-lg btn-secondary" style="width: 11vw; font-size: 1vw;" onclick="location.href='@Url.Action("ServiceList", "PatientServices")'"> @LangResources["Patient_Button_Cancel"] </button>
		<button class="btn btn-lg btn-primary" style="width: 11vw; font-size: 1vw;" onclick="submitServiceInfo();"> @LangResources["Inventory_Label_Create"] </button>
	</div>

</div>

<script>
	$("#SubMenuServices").toggleClass('show');
	document.querySelector("#SubMenuServicesParent").querySelector("#imgArrow").classList.toggle("Up");

	$(document).ready(function(){
		if ('@sessionLevel' == '2' && '@sessionIsAdmin' == '1')
		{
			$('#Organisation').val('@sessionOrganizationID');
			$('#Organisation').trigger('change');
			$('#Organisation').prop('disabled', true);

			getBranch('@sessionOrganizationID');
		}
	});

	function getBranch(organisationID) {
		fetch('/PatientServices/GetBranchList?organisationID=' + organisationID)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {

				var element = document.getElementById("Branch");

				element.innerHTML = '<option value="" selected> -- @LangResources["Inventory_Label_SelectBranch"] -- </option>';

				for (let i = 0; i < data.length; i++) {
					element.innerHTML = element.innerHTML + '<option value="' + data[i].ID + '">' + data[i].Name + '</option>';
				}
			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});
	}

	function submitServiceInfo() {
		var ServiceName = document.getElementById("ServiceName").value
		var Category = document.getElementById("Category").value
		var Price = document.getElementById("Price").value
		var Organisation = document.getElementById("Organisation").value
		var Branch = document.getElementById("Branch").value
		var TimeOfService = document.getElementById("TimeOfService").value
		var Status = document.getElementById("Status").value
		var Description = document.getElementById("Description").value
		var Precaution = document.getElementById("Precaution").value

		var obj = {
			Name: ServiceName,
			CategoryID: Category,
			Prices: Price,
			BranchID: Branch,
			Duration: TimeOfService,
			Status: Status,
			Description: Description,
			Precaution: Precaution
		};

		fetch('/PatientServices/InsertService', {
			method: 'post',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify(obj)
		})
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {
				if(data != 0){
					window.location = "/PatientServices/ServiceList";
				}
			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});

	}
</script>