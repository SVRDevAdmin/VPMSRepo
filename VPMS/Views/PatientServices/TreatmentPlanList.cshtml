﻿@using Microsoft.AspNetCore.Localization
@inject VPMSWeb.Interface.IResourcesLocalizer LangResources
@inject IHttpContextAccessor httpContextaccessor

@{
	ViewData["Title"] = "Treatment Plan Page";
	ViewBag.SelectedMenu = "patientServicesMenu";

	var currency = httpContextaccessor.HttpContext.Session.GetString("Currency");
}

<style>
	.table-content {
		text-align: center;
		height: 2vw;
	}

	.table-row-content {
		padding: 1vw 0;
	}

	table th:first-child {
		border-radius: 0.2vw 0 0 0.2vw;
	}

	table th:last-child {
		border-radius: 0 0.2vw 0.2vw 0;
	}

	.form-field {
		border-style: solid;
		border-color: black;
		font-size: 1vw;
	}

	.field-container {
		display: flex;
		flex-direction: column;
		margin-bottom: 2vw;
		font-size: 1vw;
	}

	.form-label {
		font-weight: bold;
		margin-bottom: 0.7vw;
	}

	/* circle-icon */
	#container {
		width: 1.6vw;
		height: 1.6vw;
		display: flex;
		background: transparent;
		border-radius: 2vw;
		color: white;
		border: 0.15vw solid;
		font-size: 1.5vw;
		justify-content: center;
		align-items: center;
	}

	#patientTreatmentPlan {
		color: dodgerblue !important;
	}
</style>

@* <div style="display: flex;">

	<div style="display: flex; align-items: center; margin-bottom: 3vw;">
		<img id="imgBackArrow" style=" margin-right: 1vw; width: 1.5vw;" /> <span class="textColor" style="font-size: 2vw;">Treatment Plans</span>
	</div>

	<div>
		<button class="btn btn-lg btn-primary" style="right: 0; position: absolute; margin-right: 3vw; display: flex; align-items: center;" onclick="location.href='@Url.Action("CreateNewTreatment", "PatientServices")'">
			<span id="container">+</span>
			<span style="font-size: 1vw; margin-left: 0.5vw;">New Treatment</span>
		</button>
	</div>

</div> *@

<div style="display: flex; justify-content: space-between;">

	<div style="display: flex; align-items: center; margin-bottom: 3vw;">
		<img id="imgBackArrow" style=" margin-right: 1vw; width: 1.5vw;" /> <span class="textColor" style="font-size: 2vw;">@LangResources["TreatmentPlan_Label_TreatmentPlans"]</span>
	</div>

	<div style="display: flex; margin-bottom: 3vw; height: 3vw;">
		<div style="display: flex;">
			<input id="SearchTreatmentPlan" type="text" class="form-control form-field inputField" placeholder="@LangResources["TreatmentPlan_Label_SearchService"]" style="border-bottom-right-radius: 0; border-top-right-radius: 0;" />
			<button onclick="searchFilter(document.getElementById('SearchTreatmentPlan').value);" class="btn btn-lg btn-primary" style="font-size: 1vw; display: flex; justify-content: center;  align-items: center; border-bottom-left-radius: 0; border-top-left-radius: 0;"><i class="fa-solid fa-magnifying-glass"></i></button>
		</div>
		<button class="btn btn-lg btn-primary" style="margin-right: 3vw; display: flex; align-items: center; width: 12vw; margin-left: 1vw;" onclick="location.href='@Url.Action("CreateNewTreatment", "PatientServices")'">
			<span id="container">+</span>
			<span style="font-size: 1vw; margin-left: 0.5vw;">@LangResources["TreatmentPlan_Label_NewTreatment"]</span>
		</button>
	</div>

</div>

<div>
	<table class="textColor" id="treatmentPlanList" style="width:100%; margin-bottom: 2vw; font-size: 1vw;">
	</table>

	<div id="pagination" style="display: flex; justify-content: flex-end;">
		<div>
			<button id="prevButton" onclick="prev();" style="width: 3vw; height: 3vw; margin-right: 2vw; text-align: center; display: flex; align-items: center; justify-content: center; background: transparent; border-style: none; font-weight: bold; color: gray; font-size: 1vw;" hidden>@LangResources["Patient_Button_Previous"]</button>
		</div>
		<div id="paginationNumbering" style="display: flex; justify-content: flex-end; font-size: 1vw;">
		</div>
		<div>
			<button id="nextButton" onclick="next();" style="width: 3vw; height: 3vw; margin-left: 1vw; text-align: center; display: flex; align-items: center; justify-content: center; background: transparent; border-style: none; font-weight: bold; color: #1e76fb; font-size: 1vw;" hidden>@LangResources["Patient_Button_Next"]</button>
		</div>
	</div>
</div>

<script>
	var paginationLimit = 5;
	var rowLimit = 8;
	var startPagination = 1;
	var endPagination = 0;
	var totalPagination = 0;
	var currentPage = 1;
	var search = "";

	$("#SubMenuServices").toggleClass('show');
	document.querySelector("#SubMenuServicesParent").querySelector("#imgArrow").classList.toggle("Up");

	filter();

	function getTreatmentPlanList(page, search, reset) {
		fetch('/PatientServices/GetTreatmentPlanList?rowLimit=' + rowLimit + '&page=' + page + '&search=' + search)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {

				let total = data.totalTreatmentPlan;

				if (reset) {
					if (total == 0) { document.getElementById("pagination").hidden = true; }
					else {
						document.getElementById("pagination").hidden = false;

						var totalPage = parseInt(total / rowLimit);

						if (totalPage == 0) { totalPage = totalPage + 1; }

						if ((total > rowLimit) && (total % rowLimit) != 0) { totalPage = totalPage + 1; }

						totalPagination = totalPage;

						if (totalPage > paginationLimit) { endPagination = paginationLimit }
						else { endPagination = totalPage; }

						pagination(startPagination, endPagination);
					}
				}


				if (currentPage == totalPagination) { document.getElementById("nextButton").hidden = true; }
				else { document.getElementById("nextButton").hidden = false; }
				if (currentPage == 1) { document.getElementById("prevButton").hidden = true; }
				else { document.getElementById("prevButton").hidden = false; }

				var content = document.getElementById("treatmentPlanList");



				content.innerHTML =
					'<tr class="containerBackground">' +
					'<th class="table-content"> @LangResources["Patient_Label_Number"] </th>' +
					'<th class="table-content" > @LangResources["TreatmentPlan_Label_TreatmentName"] </th >' +
					'<th class="table-content"> @LangResources["TreatmentPlan_Label_DateCreated"] </th>' +
					'<th class="table-content"> @LangResources["TreatmentPlan_Label_CreatedBy"] </th>' +
					'<th class="table-content"> @LangResources["TreatmentPlan_Label_Cost"] ($) </th>' +
					'<th class="table-content"> @LangResources["Patient_Label_Status"] </th>' +
					'<th class="table-content">  </th>' +
					'</tr>';

				// content.innerHTML =
				// 	'<tr class="containerBackground">' +
				// 	'<th class="table-content"> @LangResources["Patient_Label_Number"] </th>' +
				// 	'<th class="table-content" > @LangResources["TreatmentPlan_Label_TreatmentName"] </th >' +
				// 	'<th class="table-content"> @LangResources["TreatmentPlan_Label_DateCreated"] </th>' +
				// 	'<th class="table-content"> @LangResources["TreatmentPlan_Label_CreatedBy"] </th>' +
				// 	'<th class="table-content"> @LangResources["TreatmentPlan_Label_Cost"] (@currency) </th>' +
				// 	'<th class="table-content"> @LangResources["Patient_Label_Status"] </th>' +
				// 	'<th class="table-content">  </th>' +
				// 	'</tr>';

				if (total == 0) { content.innerHTML = content.innerHTML + ' <tr style="border-bottom-width: 0.1vw; height: 3.3vw;"> <td colspan="9" class="table-content" style="text-align: center;"> @LangResources["Patient_Message_NoRecord"] <td> </tr>' }
				else {

					var index = ((currentPage - 1) * rowLimit) + 1;

					for(let i = 0; i < data.treatmentPlans.length; i++) {

						var status, changedStatus, color, background, toggleStatus;

						if (data.treatmentPlans[i].Status == 1) {
							status = "@LangResources["Patient_Selection_Active"]";
							color = "#57baa5";
							background = "#c3f7ec";
							toggleStatus = "@LangResources["TreatmentPlan_Label_MakeInactive"]";
							changedStatus = "@LangResources["Patient_Selection_Inactive"]";
						}
						else {
							status = "@LangResources["Patient_Selection_Inactive"]";
							color = "#ff2c29";
							background = "#ffc5c4";
							toggleStatus = "@LangResources["TreatmentPlan_Label_MakeActive"]";
							changedStatus = "@LangResources["Patient_Selection_Active"]";
						}

						content.innerHTML = content.innerHTML +
							'<tr style="border-bottom-width: 0.1vw; height: 3.3vw;">' +
							'<td class="table-content" > ' + index + ' </td>' +
							'<td class="table-content"> ' + data.treatmentPlans[i].Name + ' </td>' +
							'<td class="table-content"> ' + data.treatmentPlans[i].CreatedDate + ' </td>' +
							'<td class="table-content"> ' + data.treatmentPlans[i].CreatedBy + ' </td>' +
							'<td class="table-content"> ' + data.treatmentPlans[i].TotalPrice + ' </td>' +
							'<td class="table-content treatmentStatus">' +
							'<div style="color: ' + color + '; background-color: ' + background + '; font-weight: bold; padding: 0.2vw 1vw; border-radius: 0.5vw; width: 6vw; margin: auto;">' +
							status +
							'</div>' +
							'</td>' +
							'<td class="table-content" style="width: 0;">' +
								'<div class="dropleft">' +
									'<button class="btn" type="button" data-toggle="dropdown" aria-expanded="false">' +
									'<img class="moreIcon" />' +
									'</button>' +
									'<div class="dropdown-menu" style="min-width: fit-content; font-size: 1vw;">' +
										'<a class="dropdown-item" href="/PatientServices/ViewEditTreatmentPlan/View/' + data.treatmentPlans[i].ID + '"> @LangResources["Patient_Button_View"] </a>' +
										'<a class="dropdown-item" href="/PatientServices/ViewEditTreatmentPlan/Edit/' + data.treatmentPlans[i].ID + '"> @LangResources["Patient_Button_Edit"] </a>' +
										'<a class="dropdown-item" href="#" onclick="ToggleStatus(this, ' + data.treatmentPlans[i].ID + ', ' + data.treatmentPlans[i].Status + ');"> ' + toggleStatus + ' </a>' +
									'</div>' +
								'</div>' +
							'</td>' +
							'</tr > ';
					}
				}


			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});
	}

	function pagination(start, end) {

		var element = document.getElementById("paginationNumbering");

		element.innerHTML = "";

		for (let i = start; i < end + 1; i++) {
			var color = "";
			if (currentPage == i) { background = "#1e76fb"; color = "white" }
			else { background = "transparent"; color = "#1e76fb"; }

			element.innerHTML = element.innerHTML +
				'<div>' +
				'<button onclick="changePage(this);" data-page="' + i + '" style="width: 3vw; height: 3vw; background-color: ' + background + '; color: ' + color + '; margin-right: 1vw; text-align: center; border-radius: 3vw; display: flex; align-items: center; justify-content: center; border: 0.1vw solid; border-color: #1e76fb; font-weight: bold;"> ' + ('0' + i).slice(-2) + ' </button>' +
				'</div>';
		}

	}

	function prev() {
		currentPage = currentPage - 1;

		getTreatmentPlanList(currentPage, search, false);

		if ((currentPage != 1) && (currentPage == startPagination)) { startPagination--; endPagination--; }
		pagination(startPagination, endPagination);
	}

	function next() {
		currentPage = currentPage + 1;

		getTreatmentPlanList(currentPage, search, false);

		if ((currentPage == endPagination) && (endPagination != totalPagination)) { startPagination++; endPagination++; }
		pagination(startPagination, endPagination);
	}

	function changePage(page) {
		let pageNum = page.getAttribute("data-page");

		currentPage = Number(pageNum);

		getTreatmentPlanList(currentPage, search, false);

		if ((currentPage == endPagination) && (endPagination != totalPagination)) { startPagination++; endPagination++; }
		else if ((currentPage != 1) && (currentPage == startPagination)) { startPagination--; endPagination--; }
		pagination(startPagination, endPagination);


	}

	function searchFilter(searchData) {
		search = searchData;
		filter();
	}

	function filter() {
		currentPage = 1;

		getTreatmentPlanList(1, search, true);
	}

	function ToggleStatus(e, treatmentID, status) {
		var newStatus;

		if (status == 2) { newStatus = 1; }
		else { newStatus = 2; }

		fetch('/PatientServices/ChangeTreatmentPlanStatus?treatmentPlanID=' + treatmentID + '&newStatus=' + newStatus)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {
				let a = data;

				getTreatmentPlanList(currentPage, search, true);
			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});
	}
</script>