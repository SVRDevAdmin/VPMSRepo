﻿@using Microsoft.AspNetCore.Localization
@inject VPMSWeb.Interface.IResourcesLocalizer LangResources
@model List<VPMS.Lib.Data.Models.ServiceList>

@{
	ViewData["Title"] = "Service Page";
	ViewBag.SelectedMenu = "patientServicesMenu";
}

<style>
	.table-content {
		/* text-align: center; */
		height: 2vw;
	}

	.table-content-center {
		text-align: center;
	}

	.table-row-content {
		padding: 1vw 0;
	}

	table th:first-child {
		border-radius: 0.2vw 0 0 0.2vw;
	}

	table th:last-child {
		border-radius: 0 0.2vw 0.2vw 0;
	}

	.form-field {
		border-style: solid;
		border-color: black;
		font-size: 12px;
	}

	.field-container {
		display: flex;
		flex-direction: column;
		margin-bottom: 2vw;
		font-size: 12px;
	}

	.form-label {
		font-weight: bold;
		margin-bottom: 0.7vw;
	}

	/* circle-icon */
/* 	#container {
		width: 1.6vw;
		height: 1.6vw;
		display: flex;
		background: transparent;
		border-radius: 2vw;
		color: white;
		border: 0.15vw solid;
		font-size: 1.5vw;
		justify-content: center;
		align-items: center;
	} */

	#service {
		color: dodgerblue !important;
	}

	#btnNewServices {
		font-size: 12px;
		margin-left: 5px;
	}
</style>

<div class="row">
	<div class="row ms-2">
		<div class="col-md-6">
			<div class="d-flex">
				<img id="imgBackArrow" style=" margin-right: 1vw; width: 1.5vw;" /> 
				<span class="textColor" style="font-size: 24px; font-weight: bold;">@LangResources["MenuBar_Label_Service"]</span>
			</div>
		</div>
		<div class="col-md-6 d-flex justify-content-end">
			<div style="display: flex;">
				<input id="SearchService" type="text" class="form-control form-field inputField" placeholder="@LangResources["TreatmentPlan_Label_SearchService"]" style="border-bottom-right-radius: 0; border-top-right-radius: 0;" />
				<button onclick="searchFilter(document.getElementById('SearchService').value);" class="btn btn-lg btn-primary" style="font-size: 12px; display: flex; justify-content: center;  align-items: center; border-bottom-left-radius: 0; border-top-left-radius: 0;"><i class="fa-solid fa-magnifying-glass"></i></button>
			</div>
			@{
				if (Boolean.Parse(ViewData["CanAdd"] as string))
				{
					<button id="btnNewServices" type="button" class="btn btn-primary" onclick="location.href='@Url.Action("CreateNewService", "PatientServices")'">
						<i class="bi bi-plus-circle"></i>
						@LangResources["Service_Button_NewService"]
					</button>
				}
			}
		</div>
	</div>
	<div class="row mt-4 ms-2">
		<div class="col-md-12">
			<table id="serviceList" class="textColor" style="width: 100%; margin-bottom: 2vw; font-size: 1vw;">
			</table>

			<div id="pagination" style="display: flex; justify-content: flex-end;">
				<div>
					<button id="prevButton" onclick="prev();" style="width: 3vw; height: 3vw; margin-right: 2vw; text-align: center; display: flex; align-items: center; justify-content: center; background: transparent; border-style: none; font-weight: bold; color: gray; font-size: 1vw;" hidden>@LangResources["Patient_Button_Previous"]</button>
				</div>
				<div id="paginationNumbering" style="display: flex; justify-content: flex-end; font-size: 1vw;">
				</div>
				<div>
					<button id="nextButton" onclick="next();" style="width: 3vw; height: 3vw; margin-left: 1vw; text-align: center; display: flex; align-items: center; justify-content: center; background: transparent; border-style: none; font-weight: bold; color: #1e76fb; font-size: 1vw;" hidden>@LangResources["Patient_Button_Next"]</button>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	var paginationLimit = 5;
	var rowLimit = 8;
	var startPagination = 1;
	var endPagination = 0;
	var totalPagination = 0;
	var currentPage = 1;
	var search = "";

	$("#SubMenuServices").toggleClass('show');
	document.querySelector("#SubMenuServicesParent").querySelector("#imgArrow").classList.toggle("Up");

	filter();

	function getServicesList(page, search, reset) {
		fetch('/PatientServices/GetServiceList?rowLimit=' + rowLimit + '&page=' + page + '&search=' + search)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {

				let total = data.totalServices;

				if (reset) {
					if (total == 0) { document.getElementById("pagination").hidden = true; }
					else {
						document.getElementById("pagination").hidden = false;

						var totalPage = parseInt(total / rowLimit);

						if (totalPage == 0) { totalPage = totalPage + 1; }

						if ((total > rowLimit) && (total % rowLimit) != 0) { totalPage = totalPage + 1; }

						totalPagination = totalPage;

						if (totalPage > paginationLimit) { endPagination = paginationLimit }
						else { endPagination = totalPage; }

						pagination(startPagination, endPagination);
					}
				}


				if (currentPage == totalPagination) { document.getElementById("nextButton").hidden = true; }
				else { document.getElementById("nextButton").hidden = false; }
				if (currentPage == 1) { document.getElementById("prevButton").hidden = true; }
				else { document.getElementById("prevButton").hidden = false; }

				var content = document.getElementById("serviceList");



				content.innerHTML =
					'<thead>' +
					'<tr class="containerBackground">' +
					'<th class="table-content" style="padding-left: 0.5vw;"> @LangResources["Patient_Label_Number"] </th>' +
					'<th class="table-content" > @LangResources["Patient_Label_Name"] </th>' +
					'<th class="table-content" > @LangResources["Inventory_Label_Category"] </th>' +
					'<th class="table-content table-content-center" > @LangResources["Service_Label_DurationHr"] </th>' +
					'<th class="table-content" > @LangResources["Patient_Label_Price"] ($) </th>' +
					'<th class="table-content" > @LangResources["Service_Label_DoctorInCharge"] </th>' +
					'<th class="table-content" > @LangResources["Inventory_Label_Organisation"] </th>' +
					'<th class="table-content" > @LangResources["Inventory_Label_Branch"] </th>' +
					'<th class="table-content table-content-center" > @LangResources["Patient_Label_Status"] </th>' +
					'<th class="table-content" > </th>' +
					'</tr>' +
					'</thead>';

				if (total == 0) { content.innerHTML = content.innerHTML + ' <tr style="border-bottom-width: 0.1vw; height: 3.3vw;"> <td colspan="9" class="table-content" style="text-align: center;"> @LangResources["Patient_Message_NoRecord"] <td> </tr>' }
				else {
					for (let i = 0; i < data.ServiceList.length; i++) {

						var status, color, background;

						if (data.ServiceList[i].Status == 1) {
							status = "@LangResources["Patient_Selection_Active"]";
							color = "#57baa5";
							background = "#c3f7ec";
						}
						else {
							status = "@LangResources["Patient_Selection_Inactive"]";
							color = "#ff2c29";
							background = "#ffc5c4";
						}

						var doctorList = data.ServiceList[i].DoctorInCharge.replaceAll(";", "</br>");

						html =
							'<tr style="border-bottom-width: 0.1vw; height: 3.3vw;">' +
							'<td class="table-content" style="padding-left: 0.5vw;">' + data.ServiceList[i].No + '</td>' +
							'<td class="table-content" > ' + data.ServiceList[i].Name + '</td>' +
							'<td class="table-content" > ' + data.ServiceList[i].Category + '</td>' +
							'<td class="table-content table-content-center" >  ' + data.ServiceList[i].Duration + '</td>' +
							'<td class="table-content" > ' + data.ServiceList[i].Price + '</td>' +
							'<td class="table-content" > ' + doctorList + '</td>' +
							'<td class="table-content" > ' + data.ServiceList[i].Organisation + '</td>' +
							'<td class="table-content" >  ' + data.ServiceList[i].Branch + '</td>' +
							'<td class="table-content table-content-center"> ' +
							'<div style="color: ' + color + '; background-color: ' + background + '; font-weight: bold; padding: 0.2vw 1vw; border-radius: 0.5vw; width: 6vw; margin: auto;">' +
							status +
							'</div > ' +
							' </td>' ;

						if(@ViewData["CanEdit"] || @ViewData["CanView"]){
							html = html +
								'<td class="table-content" style = "width: 0;" > ' +
								'<div class="dropleft" > ' +
								'<button class="btn" type="button" data-toggle="dropdown" aria-expanded="false"> ' +
								'<img class="moreIcon" /> ' +
								'</button>' +
								'<div class="dropdown-menu containerBackground5" style = "min-width: fit-content; font-size: 1vw;" > ';

							if(@ViewData["CanView"]){
								html = html +
									'<a class="dropdown-item" href="/PatientServices/ViewEditService/View/' + data.ServiceList[i].ID + '" > @LangResources["Patient_Button_View"] </a>';
							}

							if(@ViewData["CanEdit"]){
								html = html +
									'<a class="dropdown-item" href="/PatientServices/ViewEditService/Edit/' + data.ServiceList[i].ID + '"  > @LangResources["Patient_Button_Edit"] </a>';
							}

							html = html +
										'</div>' +
									'</div>' +
								'</td>';
						}

						html = html + '</tr > ';

						content.innerHTML = content.innerHTML + html;
					}
				}


			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});
	}

	function pagination(start, end) {

		var element = document.getElementById("paginationNumbering");

		element.innerHTML = "";

		for (let i = start; i < end + 1; i++) {
			var color = "";
			if (currentPage == i) { background = "#1e76fb"; color = "white" }
			else { background = "transparent"; color = "#1e76fb"; }

			element.innerHTML = element.innerHTML +
				'<div>' +
				'<button onclick="changePage(this);" data-page="' + i + '" style="width: 3vw; height: 3vw; background-color: ' + background + '; color: ' + color + '; margin-right: 1vw; text-align: center; border-radius: 3vw; display: flex; align-items: center; justify-content: center; border: 0.1vw solid; border-color: #1e76fb; font-weight: bold;"> ' + ('0' + i).slice(-2) + ' </button>' +
				'</div>';
		}

	}

	function prev() {
		currentPage = currentPage - 1;

		getServicesList(currentPage, search, false);

		if ((currentPage != 1) && (currentPage == startPagination)) { startPagination--; endPagination--; }
		pagination(startPagination, endPagination);
	}

	function next() {
		currentPage = currentPage + 1;

		getServicesList(currentPage, search, false);

		if ((currentPage == endPagination) && (endPagination != totalPagination)) { startPagination++; endPagination++; }
		pagination(startPagination, endPagination);
	}

	function changePage(page) {
		let pageNum = page.getAttribute("data-page");

		currentPage = Number(pageNum);

		getServicesList(currentPage, search, false);

		if ((currentPage == endPagination) && (endPagination != totalPagination)) { startPagination++; endPagination++; }
		else if ((currentPage != 1) && (currentPage == startPagination)) { startPagination--; endPagination--; }
		pagination(startPagination, endPagination);


	}

	function searchFilter(searchData){
		search = searchData;
		filter();
	}

	function filter() {
		currentPage = 1;

		getServicesList(1, search, true);
	}
</script>