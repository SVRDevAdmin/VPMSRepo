﻿@using Microsoft.AspNetCore.Localization
@inject VPMSWeb.Interface.IResourcesLocalizer LangResources
@inject IHttpContextAccessor httpContextaccessor

@{
	ViewData["Title"] = "Inventory Page";
	ViewBag.SelectedMenu = "inventoryMenu";

	string reload = httpContextaccessor.HttpContext.Request.Cookies["reload"];

	var sessionCurrencyCode = httpContextaccessor.HttpContext.Session.GetString("CurrencyCode");
}

<link rel="stylesheet" href="~/css/InventoryList.css" />

<div class="row">
	<div class="row ms-2">
		<div class="col-md-5">
			<label class="pageTitle">@LangResources["MenuBar_Label_Inventory"]</label>
		</div>
		<div class="col-md-7 d-flex justify-content-end">
			<div style="display: flex;">
				<input id="SearchService" type="text" class="form-control form-field inputField" placeholder="@LangResources["Inventory_Label_SearchInventory"]" style="border-bottom-right-radius: 0; border-top-right-radius: 0;" />
				<button class="btn btn-lg btn-primary searchMagnifying" onclick="searchFilter(document.getElementById('SearchService').value);">
					<i class="fa-solid fa-magnifying-glass"></i>
				</button>
			</div>
			<button id="btnNewInventory" type="button" class="btn btn-primary" onclick="location.href='@Url.Action("CreateNewInventory", "Inventory")'">
				<i class="bi bi-plus-circle"></i>
				@LangResources["Inventory_Button_NewInventory"]
			</button>
			<button id="btnDownload" class="btn btn-primary" onclick="getInventoryListPrintDownload('download');">
				<i class="fa-solid fa-download"></i>
			</button>
			<button id="btnPrint" class="btn btn-primary" onclick="getInventoryListPrintDownload('print');">
				<i class="fa-solid fa-print"></i>
			</button>
		</div>
	</div>

	<div class="row mt-4 ms-2">
		<div class="col-md-12">
			<div >
				<table id="inventoryList" class="table">
				</table>
			</div>

			<div id="pagination" style="display: flex; justify-content: flex-end; margin-top: 1vw;">
				<div>
					<button id="prevButton" onclick="prev();" style="width: 3vw; height: 3vw; margin-right: 2vw; text-align: center; display: flex; align-items: center; justify-content: center; background: transparent; border-style: none; font-weight: bold; color: gray; font-size: 1vw;" hidden>@LangResources["Patient_Button_Previous"]</button>
				</div>
				<div id="paginationNumbering" style="display: flex; justify-content: flex-end; font-size: 1vw;">
				</div>
				<div>
					<button id="nextButton" onclick="next();" style="width: 3vw; height: 3vw; margin-left: 1vw; text-align: center; display: flex; align-items: center; justify-content: center; background: transparent; border-style: none; font-weight: bold; color: #1e76fb; font-size: 1vw;" hidden>@LangResources["Patient_Button_Next"]</button>
				</div>
			</div>
		</div>
	</div>
</div>

<div>

	<div id="tablePrintDownload" class="hideContainer">
		<style>
			.tableContentPrintDownload {
				height: 2vw;
				padding: 0 0.55vw;
			}

			.table-content-center {
				text-align: center;
			}

			.fontSize {
				font-size: 0.9vw;
			}

			.table-row-content {
				padding: 1vw 0;
			}

			table th:first-child {
				border-radius: 0.2vw 0 0 0.2vw;
			}

			table th:last-child {
				border-radius: 0 0.2vw 0.2vw 0;
			}

			.hideContainer {
				display: none !important;
			}

			.avoid-break {
				page-break-inside: avoid;
			}

			@@media print {
				/* All your print styles go here */
				.fontSize {
					font-size: 1.39vw;
				}

				.printHide{
					display: none !important;
				}

				.tableContentPrintDownload {
					height: 2vw;
					padding: 0 0.82vw !important;
				}
			}
		</style>
		<div id="inventoryListPrintDownload"> </div>
	</div>
</div>

<script>

	// if ("@reload" == "true") {
	// 	fetch('/Inventory/UpdateReload')
	// 		.then(response => {
	// 			if (!response.ok) {
	// 				throw new Error('Network response was not ok');
	// 			}
	// 			return response.json();
	// 		})
	// 		.then(data => {
	// 			if (data) {
	// 				location.reload(true); 
	// 			}
	// 		})
	// 		.catch(error => {
	// 			console.error('There was a problem with the fetch operation:', error);
	// 		});
	// }

	var paginationLimit = 5;
	var rowLimit = 9;
	var startPagination = 1;
	var endPagination = 0;
	var totalPagination = 0;
	var currentPage = 1;
	var search = "";

	filter();

	function getInventoryList(page, search, reset) {
		fetch('/Inventory/GetInventoryList?rowLimit=' + rowLimit + '&page=' + page + '&search=' + search)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {

				let total = data.totalInventory;

				if (reset) {
					if (total == 0) { document.getElementById("pagination").hidden = true; }
					else {
						document.getElementById("pagination").hidden = false;

						var totalPage = parseInt(total / rowLimit);

						if (totalPage == 0) { totalPage = totalPage + 1; }

						if ((total > rowLimit) && (total % rowLimit) != 0) { totalPage = totalPage + 1; }

						totalPagination = totalPage;

						if (totalPage > paginationLimit) { endPagination = paginationLimit }
						else { endPagination = totalPage; }

						pagination(startPagination, endPagination);
					}
				}


				if (currentPage == totalPagination) { document.getElementById("nextButton").hidden = true; }
				else { document.getElementById("nextButton").hidden = false; }
				if (currentPage == 1) { document.getElementById("prevButton").hidden = true; }
				else { document.getElementById("prevButton").hidden = false; }

				var content = document.getElementById("inventoryList");


				content.innerHTML = 
					'<thead>' +
					'<tr class="containerBackground">' +
					'<th class="table-content" style="padding: 0 1vw;" > @LangResources["Patient_Label_Number"] </th>' +
					'<th class="table-content"> @LangResources["Inventory_Label_InventoryName"] </th>' +
					'<th class="table-content"> @LangResources["Inventory_Label_Category"] </th>' +
					//'<th class="table-content"> @LangResources["Inventory_Label_Usage"] </th>' +
					//'<th class="table-content"> @LangResources["Inventory_Label_ProductName"] </th>' +
					'<th class="table-content table-content-center"> @LangResources["Inventory_Label_Image"] </th>' +
					'<th class="table-content"> SKU </th>' +
					'<th class="table-content"> @LangResources["Inventory_Label_Quantity"] </th>' +
					'<th class="table-content table-content-center"> @LangResources["Inventory_Label_PricePerQty"] (@sessionCurrencyCode)</th>' +
					'<th class="table-content"> @LangResources["Inventory_Label_Organisation"] </th>' +
					'<th class="table-content"> @LangResources["Inventory_Label_Branch"] </th>' +
					'<th class="table-content table-content-center"> @LangResources["Patient_Label_Status"] </th>' +
					'<th class="table-content headcol">  </th>' +
					'</tr> ' + 
					'</thead>';

				if (total == 0) { content.innerHTML = content.innerHTML + ' <tr style="border-bottom-width: 0.1vw; height: 3.3vw;"> <td colspan="12" class="table-content" style="text-align: center;"> @LangResources["Patient_Message_NoRecord"] <td> </tr>' }
				else {
					for (let i = 0; i < data.InventoryInfoList.length; i++) {

						var status, color, background;

						if (data.InventoryInfoList[i].StockStatus == 1) {
							status = "@LangResources["Inventory_Label_InStock"]";
							color = "#57baa5";
							background = "#c3f7ec";
						}
						else {
							status = "@LangResources["Inventory_Label_OutOfStock"]";
							color = "#ff2c29";
							background = "#ffc5c4";
						}

						content.innerHTML = content.innerHTML +
							'<tr style="border-bottom-width: 0.1vw; height: 3.3vw;">' +
							'<td class="table-content" style = "padding: 0 1vw;" > ' + data.InventoryInfoList[i].No + ' </td>' +
							'<td class="table-content"> ' + data.InventoryInfoList[i].InventoryName + ' </td>' +
							'<td class="table-content"> ' + data.InventoryInfoList[i].Category + ' </td>' +
							//'<td class="table-content"> ' + data.InventoryInfoList[i].Usage + ' </td>' +
							//'<td class="table-content"> ' + data.InventoryInfoList[i].ProductName + ' </td>' +
							'<td class="table-content table-content-center">' +
							'<img src="/InventoryImages/' + data.InventoryInfoList[i].Image + '" style="height: 3vw;" />' +
							'</td>' +
							'<td class="table-content"> ' + data.InventoryInfoList[i].SKU + ' </td>' +
							'<td class="table-content"> ' + data.InventoryInfoList[i].Quantity + ' </td>' +
							'<td class="table-content table-content-center"> ' + data.InventoryInfoList[i].PricePerQty + ' </td>' +
							'<td class="table-content"> ' + data.InventoryInfoList[i].Organisation + ' </td>' +
							'<td class="table-content"> ' + data.InventoryInfoList[i].Branch + ' </td>' +
							'<td class="table-content table-content-center">' +
							'<div style="color: ' + color + '; background-color: ' + background + '; font-weight: bold; padding: 0.2vw 1vw; border-radius: 0.5vw; width: 8vw; margin: auto; ">' +
							status +
							'</div>' +
							'</td>' +
							'<td class="table-content rowcol" style="width: 0;">' +
							'<div class="dropleft">' +
							'<button class="btn" type="button" data-toggle="dropdown" aria-expanded="false" style="padding: 0;">' +
							'<img class="moreIcon" />' +
							'</button>' +
							'<div class="dropdown-menu containerBackground5" style="min-width: fit-content; font-size: 1vw;">' +
							'<a class="dropdown-item" href="/Inventory/ViewEditInventory/View/' + data.InventoryInfoList[i].ID + '"> @LangResources["Patient_Button_View"] </a>' +
							'<a class="dropdown-item" href="/Inventory/ViewEditInventory/Edit/' + data.InventoryInfoList[i].ID + '"> @LangResources["Patient_Button_Edit"] </a>' +
							'</div>' +
							'</div>' +
							'</td>' +
							'</tr>';
					}
				}
			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});
	}

	function getInventoryListPrintDownload(type) {
		fetch('/Inventory/PrintInventoryList?search=' + search)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {

				let total = data.length;

				var content = document.getElementById("inventoryListPrintDownload");

				if (total == 0) { 

					content.innerHTML =
					'<table class="textColor tableStyle fontSize" style="margin-bottom: 2vw; border: 0.1vw solid;"> ' +
					'<tr class="containerBackground">' +
						'<th class="tableContentPrintDownload" style="padding: 0 1vw;" > @LangResources["Patient_Label_Number"] </th>' +
						'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_InventoryName"] </th>' +
						'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_Category"] </th>' +
						//'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_Usage"] </th>' +
						//'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_ProductName"] </th>' +
						'<th class="tableContentPrintDownload table-content-center printHide"> @LangResources["Inventory_Label_Image"] </th>' +
						'<th class="tableContentPrintDownload"> SKU </th>' +
						'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_Quantity"] </th>' +
						'<th class="tableContentPrintDownload table-content-center"> @LangResources["Inventory_Label_PricePerQty"] </th>' +
						'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_Organisation"] </th>' +
						'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_Branch"] </th>' +
						'<th class="tableContentPrintDownload table-content-center"> @LangResources["Patient_Label_Status"] </th>' +
					'</tr> ' +
					'<tr style="border-bottom-width: 0.1vw; height: 3.3vw;"> <td colspan="9" class="tableContentPrintDownload" style="text-align: center;"> @LangResources["Patient_Message_NoRecord"] <td> </tr>' +
					'</table>';
				}
				else{
					content.innerHTML = "";

					for(let i = 0; i < total; i++){
						var organisationBranch = 
							'<span class="fontSize" style="font-weight: bold;"> Organisation : </span>' +
							'<span class="fontSize"> ' + data[i][0].Organisation + ' </span>' +
							'<span class="fontSize" style="font-weight: bold;">, Branch : </span> ' +
							'<span class="fontSize"> ' + data[i][0].Branch + ' </span> <br/>';

						var rowContent = 
							'<tr class="containerBackground">' +
								'<th class="tableContentPrintDownload" style="padding: 0 1vw;" > @LangResources["Patient_Label_Number"] </th>' +
								'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_InventoryName"] </th>' +
								'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_Category"] </th>' +
								//'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_Usage"] </th>' +
								//'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_ProductName"] </th>' +
								'<th class="tableContentPrintDownload table-content-center printHide"> @LangResources["Inventory_Label_Image"] </th>' +
								'<th class="tableContentPrintDownload"> SKU </th>' +
								'<th class="tableContentPrintDownload"> @LangResources["Inventory_Label_Quantity"] </th>' +
								'<th class="tableContentPrintDownload table-content-center"> @LangResources["Inventory_Label_PricePerQty"] </th>' +
								'<th class="tableContentPrintDownload table-content-center"> @LangResources["Patient_Label_Status"] </th>' +
							'</tr> ';

						for(let j = 0; j < data[i].length; j++){
							var status, color, background;

							if (data[i][j].StockStatus == 1) {
								status = "@LangResources["Inventory_Label_InStock"]";
								color = "#57baa5";
								background = "#c3f7ec";
							}
							else {
								status = "@LangResources["Inventory_Label_OutOfStock"]";
								color = "#ff2c29";
								background = "#ffc5c4";
							}

							rowContent +=
								'<tr style="border-bottom-width: 0.1vw; height: 3.3vw;">' +
								'<td class="tableContentPrintDownload" style = "padding: 0 1vw;" > ' + (j + 1) + ' </td>' +
								'<td class="tableContentPrintDownload"> ' + data[i][j].InventoryName + ' </td>' +
								'<td class="tableContentPrintDownload"> ' + data[i][j].Category + ' </td>' +
								//'<td class="tableContentPrintDownload"> ' + data[i][j].Usage + ' </td>' +
								//'<td class="tableContentPrintDownload"> ' + data[i][j].ProductName + ' </td>' +
								'<td class="tableContentPrintDownload table-content-center printHide">' +
								'<img src="/InventoryImages/' + data[i][j].Image + '" style="height: 3vw;" />' +
								'</td>' +
								'<td class="tableContentPrintDownload"> ' + data[i][j].SKU + ' </td>' +
								'<td class="tableContentPrintDownload"> ' + data[i][j].Quantity + ' </td>' +
								'<td class="tableContentPrintDownload table-content-center"> ' + data[i][j].PricePerQty + ' </td>' +
								'<td class="tableContentPrintDownload table-content-center">' +
								'<div style="color: ' + color + '; background-color: ' + background + '; font-weight: bold; padding: 0.2vw 1vw; border-radius: 0.5vw; width: 8vw; margin: auto; ">' +
								status +
								'</div>' +
								'</td>' +
								'</tr>';
						}

						content.innerHTML = content.innerHTML + '<div class="avoid-break">' + organisationBranch + '<table class="textColor tableStyle fontSize avoid-break" style="margin-bottom: 2vw; border: 0.1vw solid;"> ' + rowContent + ' </table> </div>';
					}
				}

				if(type == "print"){
					printHealthCard();
				}
				else{
					downloadHealthCard();
				}
			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});
	}

	function pagination(start, end) {

		var element = document.getElementById("paginationNumbering");

		element.innerHTML = "";

		for (let i = start; i < end + 1; i++) {
			var color = "";
			if (currentPage == i) { background = "#1e76fb"; color = "white" }
			else { background = "transparent"; color = "#1e76fb"; }

			element.innerHTML = element.innerHTML +
				'<div>' +
				'<button onclick="changePage(this);" data-page="' + i + '" style="width: 3vw; height: 3vw; background-color: ' + background + '; color: ' + color + '; margin-right: 1vw; text-align: center; border-radius: 3vw; display: flex; align-items: center; justify-content: center; border: 0.1vw solid; border-color: #1e76fb; font-weight: bold;"> ' + ('0' + i).slice(-2) + ' </button>' +
				'</div>';
		}

	}

	function prev() {
		currentPage = currentPage - 1;

		getInventoryList(currentPage, search, false);

		if ((currentPage != 1) && (currentPage == startPagination)) { startPagination--; endPagination--; }
		pagination(startPagination, endPagination);
	}

	function next() {
		currentPage = currentPage + 1;

		getInventoryList(currentPage, search, false);

		if ((currentPage == endPagination) && (endPagination != totalPagination)) { startPagination++; endPagination++; }
		pagination(startPagination, endPagination);
	}

	function changePage(page) {
		let pageNum = page.getAttribute("data-page");

		currentPage = Number(pageNum);

		getInventoryList(currentPage, search, false);

		if ((currentPage == endPagination) && (endPagination != totalPagination)) { startPagination++; endPagination++; }
		else if ((currentPage != 1) && (currentPage == startPagination)) { startPagination--; endPagination--; }
		pagination(startPagination, endPagination);


	}

	function searchFilter(searchData) {
		search = searchData;
		filter();
	}

	function filter() {
		currentPage = 1;

		getInventoryList(1, search, true);
	}

	function downloadHealthCard() {
		var clone = document.getElementById("tablePrintDownload").cloneNode(true);
		clone.classList.toggle("hideContainer");

		var opt = {
			margin: 1,
			filename: 'Inventory List.pdf',
			image: { type: 'jpeg', quality: 0.98 },
			html2canvas: { scale: 2 },
			jsPDF: { unit: 'in', format: 'A4', orientation: 'landscape' }
		};

		html2pdf().set(opt).from(clone).save();
	}

	function printHealthCard() {
		var iframe = document.createElement("iframe"); // create the element
		document.body.appendChild(iframe);  // insert the element to the DOM

		var clone = document.getElementById("tablePrintDownload").cloneNode(true);

		var input = clone.innerHTML;

		iframe.contentWindow.document.write(input); // write the HTML to be printed
		iframe.contentWindow.print();  // print it
		document.body.removeChild(iframe); // remove the iframe from the DOM
	}
</script>