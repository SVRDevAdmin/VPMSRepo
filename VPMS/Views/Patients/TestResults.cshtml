@inject IHttpContextAccessor httpContextaccessor
@using Microsoft.AspNetCore.Localization
@inject VPMSWeb.Interface.IResourcesLocalizer LangResources

@{
	ViewData["Title"] = "Patients Page";
	ViewBag.SelectedMenu = "patientsMenu";

	var startDate = DateOnly.FromDateTime(DateTime.Now);
	var endDate = DateOnly.FromDateTime(DateTime.Now.AddDays(5));
}

<style>
	.currentTab {
		background-color: dodgerblue !important;
		border: none !important;
	}

	.field-container {
		display: flex;
		flex-direction: column;
		margin-left: 1.5vw;
		margin-right: 1.5vw;
	}

	.formlabel {
		font-weight: bold;
		margin-bottom: 0.3vw;
		font-size: 1vw;
	}

	.inputField {
		border: 0.1vw solid;
		font-size: 1vw;
	}

	.halfSize {
		width: 36vw;
	}

	.quaterSize {
		width: 8.5vw;
	}

	/* circle-icon */
	#container {
		width: 1.6vw;
		height: 1.6vw;
		display: flex;
		background: transparent;
		border-radius: 2vw;
		color: blue;
		border: 0.15vw solid;
		font-size: 1.5vw;
		justify-content: center;
		align-items: center;
	}

	.containerCircle {
		width: 1.2vw;
		height: 1.2vw;
		display: flex;
		background: transparent;
		border-radius: 2vw;
		color: blue;
		border: 0.15vw solid;
		font-size: 1vw;
		justify-content: center;
		align-items: center;
	}

	.table-content {
		height: 2vw;
	}

	.table-row-content {
		padding: 1vw 0;
	}

	table th:first-child {
		border-radius: 0.2vw 0 0 0.2vw;
	}

	table th:last-child {
		border-radius: 0 0.2vw 0.2vw 0;
	}

	.dropdown-arrow.showInfo {
		transform: rotate(180deg);
	}

	/* Styling the range input to be invisible but functional */
	.slider {
		-webkit-appearance: none;
		width: 100%;
		/* height: 8px; */
		height: 0.7vw;
		background: transparent;
		position: absolute;
		/* top: -7px; */
		top: -0.6vw;
		left: 0;
		outline: none;
		cursor: pointer;
	}

	.columnWidth{
		width: 25%;
	}

	.label{
		display: flex;
		align-items: center;
		width: 31%;
	}
</style>

<div style="display: flex;">

	<div style="display: flex; align-items: center; margin-bottom: 1.5vw;">
		<img id="imgBackArrow" style=" margin-right: 1vw; width: 1.5vw;" onclick="window.location='/Patients/TestManagement/@ViewBag.PatientID/@ViewData["PetName"]';" />
		<span class="textColor" style="font-size: 2vw;">@LangResources["Patient_Title_Patients"]</span>
		<span class="textColor" style="font-size: 2vw; margin-left:1vw; margin-right:1vw; font-weight: bold;"> &#62; </span>
		<span class="textColor" style="font-size: 2vw;">@LangResources["Patient_Title_PatientProfile"]</span>
		<span class="textColor" style="font-size: 2vw; margin-left:1vw; margin-right:1vw; font-weight: bold;"> &#62; </span>
		<span class="textColor" style="font-size: 2vw;">@ViewData["PetName"] @LangResources["Patient_Title_Profile"]</span>
		<span class="textColor" style="font-size: 2vw; margin-left:1vw; margin-right:1vw; font-weight: bold;"> &#62; </span>
		<span class="textColor" style="font-size: 2vw;">@LangResources["Patient_Label_TestManagement"]</span>
		<span class="textColor" style="font-size: 2vw; margin-left:1vw; margin-right:1vw; font-weight: bold;"> &#62; </span>
		<span style="font-size: 2vw; color: dodgerblue;" id="title"></span>
	</div>
</div>

<template id="rowTemplate">
	<tr style="border-bottom-width: 0.1vw; height: 3.3vw;">
		<td class="table-content" style="padding-left: 1vw;"></td>
		<td class="table-content"></td>
		<td class="table-content"><span></span> - <span></span><span></span></td>
		<td class="table-content" style="padding-right: 1vw;">
			<div class="slider-container">
				<input type="range" min="0" max="100" value="0" class="slider" disabled>
			</div>
		</td>
	</tr>
</template>

<div>
	<table class="textColor" id="resultList" style="width:100%; margin-bottom: 2vw; font-size: 1vw;">
		<tr class="containerBackground">
			<th class="table-content columnWidth" style="padding-left: 1vw;">@LangResources["TestManagement_Label_Parameter"]</th>
			<th class="table-content" style="width: 18%;">@LangResources["TestManagement_Label_Result"]</th>
			<th class="table-content" style="width: 18%;">@LangResources["TestManagement_Label_NormalRange"]</th>
			<th class="table-content columnWidth">@LangResources["TestManagement_Label_ResultGauge"]</th>
		</tr>
		<tr>
			<td class="table-content" style="padding-left: 1vw;"></td>
			<td class="table-content"></td>
			<td class="table-content"></td>
			<td class="table-content" style="padding: 0.5vw 0; padding-right: 1vw; display: flex; height: min-content;">
				<div class="label">
					<div style="border-left: 0.5vw solid #fcc11d; height: 0.8vw;"></div>
					<div style="margin-left: 0.5vw;">@LangResources["TestManagement_Label_Low"]</div>
				</div>
				<div class="label">
					<div style="border-left: 0.5vw solid #42c0a5; height: 0.8vw;"></div>
					<div style="margin-left: 0.5vw;">@LangResources["TestManagement_Label_Normal"]</div>
				</div>
				<div class="label">
					<div style="border-left: 0.5vw solid #ea4643; height: 0.8vw;"></div>
					<div style="margin-left: 0.5vw;">@LangResources["TestManagement_Label_High"]</div>
				</div>
			</td>
		</tr>
		@{
			var data = ViewData["Results"] as List<VPMS.Lib.Data.Models.TestResultDetails>;

			if(data.Count > 0)
			{
				foreach (var result in ViewData["Results"] as List<VPMS.Lib.Data.Models.TestResultDetails>)
				{
					float floatValue;
					bool isFloat = float.TryParse(result.ResultValue.Replace("<", "").Replace(">", "").Replace(" ", ""), out floatValue);
					float rangeStart = 0;
					float rangeEnd = 0;

					<tr style="border-bottom-width: 0.1vw; height: 3.3vw;">
					<td class="table-content" style="padding-left: 1vw;">@result.ResultParameter</td>

					@if (isFloat)
					{
							<td class="table-content">@floatValue @result.ResultUnit</td>
						}
						else
						{
							var resultValue = result.ResultValue;
							if (resultValue == "Positive")
							{
								resultValue = LangResources["TestManagement_Label_Positive"];
							}
							else if (resultValue == "Negative")
							{
								resultValue = LangResources["TestManagement_Label_Negative"];
							}
							<td class="table-content">@resultValue</td>
					}

					@if (result.ReferenceRange != null)
					{
						var normalRange = result.ReferenceRange.Replace("[", "").Replace("]", "").Split(";");
						var differ = float.Parse(normalRange[1]) - float.Parse(normalRange[0]);
						rangeStart = float.Parse(normalRange[0]) - differ;
						rangeEnd = float.Parse(normalRange[1]) + differ;

						<td class="table-content"><span>@normalRange[0]</span> - <span>@normalRange[1]</span> <span>@result.ResultUnit</span></td>
					}
					else
					{
						<td class="table-content"><span>N/A</span></td>
					}

					@if (isFloat && result.ReferenceRange != null && floatValue.ToString() != "NaN")
					{
						<td class="table-content" style="padding-right: 1vw;">
							<div class="slider-container">
								<input type="range" min="@rangeStart" max="@rangeEnd" value="@floatValue" class="slider" disabled>
							</div>
						</td>
					}
					else
					{
						<td class="table-content" style="padding-right: 1vw;"> <span>N/A</span> </td>
					}

					</tr>
				}
			}
			else
			{
				<tr style="border-bottom-width: 0.1vw; height: 3.3vw;">
					<td class="table-content" colspan="4" style="padding-right: 1vw; text-align: center;"> @LangResources["TestResults_Message_NoRecords"] </td>
				</tr>
			}
		}
	</table>


</div>

<script>
	var tableElement = document.getElementById("resultList");

	if ("@ViewData["Category"]" == "1") {
		document.getElementById("title").innerHTML = "@LangResources["TestManagement_Label_BloodTest"]"
	}
	else if ("@ViewData["Category"]" == "3") {
		document.getElementById("title").innerHTML = "@LangResources["TestManagement_Label_Analyzer"]";
	}
</script>